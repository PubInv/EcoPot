/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      surfaceFeaturesDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

air
{
    surfaces
    (
        "air.stl"
    );

    // Mark edges whose adjacent surface normals are at an angle less
    // than includedAngle as features
    // - 0  : selects no edges
    // - 180: selects all edges
    includedAngle           150;

    // Do not mark region edges
    geometricTestOnly       yes;

    writeObj                yes;
    verboseObj              yes;
}


solid
{
    surfaces
    (
        "pot_round.stl"
    );

    // Mark edges whose adjacent surface normals are at an angle less
    // than includedAngle as features
    // - 0  : selects no edges
    // - 180: selects all edges
    includedAngle           180;

    // Do not mark region edges
    geometricTestOnly       yes;

    writeObj                yes;
    verboseObj              yes;
}

water
{
    surfaces
    (
        "ecoPotContentNew.stl"
    );

    // Mark edges whose adjacent surface normals are at an angle less
    // than includedAngle as features
    // - 0  : selects no edges
    // - 180: selects all edges
    includedAngle           60;//150;

    // Do not mark region edges
    geometricTestOnly       yes;

    writeObj                yes;
    verboseObj              yes;
}


/*pipeWall
{
    surfaces
    (
        "pipeWall.obj"
    );

    // Mark edges whose adjacent surface normals are at an angle less
    // than includedAngle as features
    // - 0  : selects no edges
    // - 180: selects all edges
    includedAngle           150;

    closeness
    {
        // Output the closeness of surface points to other surface elements.
        pointCloseness          yes;
    }

    writeVTK                yes;
}*/

// ************************************************************************* //
